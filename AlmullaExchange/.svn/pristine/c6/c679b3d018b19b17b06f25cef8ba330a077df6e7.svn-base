package com.amg.exchange.bean;

import java.io.ByteArrayOutputStream;
import java.io.IOException;
import java.io.InputStream;
import java.io.Serializable;
import java.math.BigDecimal;
import java.sql.Blob;
import java.sql.SQLException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.Date;
import java.util.GregorianCalendar;
import java.util.List;

import javax.faces.context.ExternalContext;
import javax.faces.context.FacesContext;
import javax.sql.rowset.serial.SerialException;

import org.apache.log4j.Logger;
import org.primefaces.model.StreamedContent;
import org.primefaces.model.UploadedFile;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.context.annotation.Scope;
import org.springframework.stereotype.Component;

import com.amg.exchange.mail.ApplicationMailer;
import com.amg.exchange.model.CompanyGroup;
import com.amg.exchange.model.CompanyMaster;
import com.amg.exchange.model.CountryMaster;
import com.amg.exchange.model.CountryMasterDesc;
import com.amg.exchange.model.Customer;
import com.amg.exchange.model.CustomerEmploymentInfo;
import com.amg.exchange.model.CustomerIdProof;
import com.amg.exchange.model.CustomerType;
import com.amg.exchange.model.DocumentImg;
import com.amg.exchange.model.IdentityType;
import com.amg.exchange.model.LanguageType;
import com.amg.exchange.service.IGeneralService;
import com.amg.exchange.service.IRemmiterOnlineRegService;
import com.amg.exchange.util.SessionStateManage;

@Component("remmiterInfo")
@Scope("session")
public class RemmiterInfoManageBean<T> implements Serializable {  
	
    Logger log = Logger.getLogger(RemmiterInfoManageBean.class);
    
	private static final long serialVersionUID = 1L;
	
	public BigDecimal pkCustomerIdProof = null;
	public String idNumber = null;
	public Date idExpDate = null;
	
	public BigDecimal pkCustomerId = null;
	public String expDateCheck = null;
	public String showDob = null;
	private UploadedFile file = null;
	private StreamedContent downloadFile = null; 
	private String title = null;
	private String firstName = null;
	private String middleName = null;
	private String lastName = null;
	private String shortName = null;
	private String localTitle = null;
	private String localFirstName = null;
	private String localMiddleName = null;
	private String localLastName = null;
	private String localShortName = null;
	private BigDecimal nationality = null;
	private String gender = null;
	private String mobileNo = null;
	private String email = null;
	private String alternateEmail = null;
	private Date dateOfBirth = null;
	
	public BigDecimal pkCustomerEmployeeId = null;
	private BigDecimal employmentType = null;
	private String occupation = null;
	private String employer = null;
	private String blockNo = null;
	private String streetNo = null;
	private String area = null;
	private String officeTelNo = null;
	private BigDecimal country = null;
	private BigDecimal state = null;
	private BigDecimal district = null;
	private BigDecimal city = null;
	private String postalCode = null;
	
	public BigDecimal pkCustomerContactDetails = null;
	private BigDecimal contactType = null;
	private String contactLocalArea = null;
	private BigDecimal contactCountry = null;
	private String contactStreetNo = null;
	private BigDecimal contactState = null;
	private String contactTelephoneNo = null;
	private BigDecimal contactDistrict = null;
	private String contactFlat = null;
	private BigDecimal contactCity = null;
	private String contactBlockNo = null;
	
	/*These booleans are responsible to render panels*/ 
	private Boolean booPersonalInformation = true;
	private Boolean booEmploymentInformation = false;
	private Boolean booContactDetails = false;
	
	private Boolean booReadonlyIdNumber = false;
	
	private List<Customer> lstCustomer = new ArrayList<Customer>();
	private List<CustomerEmploymentInfo> lstCustomerEmployment = new ArrayList<CustomerEmploymentInfo>();
	private List<CustomerIdProof> lstCustomerIdProof = new ArrayList<CustomerIdProof>();
	
	SimpleDateFormat formatter = new SimpleDateFormat("dd/MM/yyyy");
	
	SessionStateManage sessionStateManage = new SessionStateManage();
	
	@Autowired
	IRemmiterOnlineRegService<T> remOnlineReg;
	public IRemmiterOnlineRegService<T> getRemOnlineReg() {
		return remOnlineReg;
	}
	public void setRemOnlineReg(IRemmiterOnlineRegService<T> remOnlineReg) {
		this.remOnlineReg = remOnlineReg;
	}
	
	@Autowired
	IGeneralService<T> iGeneralService;
	public IGeneralService<T> getiGeneralService() {
		return iGeneralService;
	}
	public void setiGeneralService(IGeneralService<T> iGeneralService) {
		this.iGeneralService = iGeneralService;
	}

	@Autowired
	ApplicationMailer mailService;
	public ApplicationMailer getMailService() {
		return mailService;
	}
	public void setMailService(ApplicationMailer mailService) {
		this.mailService = mailService;
	}
	
	public BigDecimal getPkCustomerIdProof() {
		return pkCustomerIdProof;
	}
	public void setPkCustomerIdProof(BigDecimal pkCustomerIdProof) {
		this.pkCustomerIdProof = pkCustomerIdProof;
	}
	
	public String getIdNumber() {
		return idNumber;
	}
	public void setIdNumber(String idNumber) {
		this.idNumber = idNumber;
	}

	public Date getIdExpDate() {
		return idExpDate;
	}
	public void setIdExpDate(Date idExpDate) {
		this.idExpDate = idExpDate;
	}
	
	public String getExpDateCheck() {
		return expDateCheck;
	}
	public void setExpDateCheck(String expDateCheck) {
		this.expDateCheck = expDateCheck;
	}
	
	public BigDecimal getPkCustomerId() {
		return pkCustomerId;
	}
	public void setPkCustomerId(BigDecimal pkCustomerId) {
		this.pkCustomerId = pkCustomerId;
	}
	
	public UploadedFile getFile() {
		return file;
	}
	public void setFile(UploadedFile file) {
		this.file = file;
	}

	public StreamedContent getDownloadFile() {
		return downloadFile;
	}
	public void setDownloadFile(StreamedContent downloadFile) {
		this.downloadFile = downloadFile;
	}

	public String getTitle() {
		return title;
	}
	public void setTitle(String title) {
		this.title = title;
	}

	public String getFirstName() {
		return firstName;
	}
	public void setFirstName(String firstName) {
		this.firstName = firstName;
	}

	public String getMiddleName() {
		return middleName;
	}
	public void setMiddleName(String middleName) {
		this.middleName = middleName;
	}

	public String getLastName() {
		return lastName;
	}
	public void setLastName(String lastName) {
		this.lastName = lastName;
	}

	public String getShortName() {
		return shortName;
	}
	public void setShortName(String shortName) {
		this.shortName = shortName;
	}

	public String getLocalTitle() {
		return localTitle;
	}
	public void setLocalTitle(String localTitle) {
		this.localTitle = localTitle;
	}

	public String getLocalFirstName() {
		return localFirstName;
	}
	public void setLocalFirstName(String localFirstName) {
		this.localFirstName = localFirstName;
	}

	public String getLocalMiddleName() {
		return localMiddleName;
	}
	public void setLocalMiddleName(String localMiddleName) {
		this.localMiddleName = localMiddleName;
	}

	public String getLocalLastName() {
		return localLastName;
	}
	public void setLocalLastName(String localLastName) {
		this.localLastName = localLastName;
	}

	public String getLocalShortName() {
		return localShortName;
	}
	public void setLocalShortName(String localShortName) {
		this.localShortName = localShortName;
	}

	public BigDecimal getNationality() {
		return nationality;
	}
	public void setNationality(BigDecimal nationality) {
		this.nationality = nationality;
	}

	public String getGender() {
		return gender;
	}
	public void setGender(String gender) {
		this.gender = gender;
	}

	public String getMobileNo() {
		return mobileNo;
	}
	public void setMobileNo(String mobileNo) {
		this.mobileNo = mobileNo;
	}

	public String getEmail() {
		return email;
	}
	public void setEmail(String email) {
		this.email = email;
	}

	public String getAlternateEmail() {
		return alternateEmail;
	}
	public void setAlternateEmail(String alternateEmail) {
		this.alternateEmail = alternateEmail;
	}
	
	public Date getDateOfBirth() {
		return dateOfBirth;
	}
	public void setDateOfBirth(Date dateOfBirth) {
		this.dateOfBirth = dateOfBirth;
	}
	
	public BigDecimal getPkCustomerEmployeeId() {
		return pkCustomerEmployeeId;
	}
	public void setPkCustomerEmployeeId(BigDecimal pkCustomerEmployeeId) {
		this.pkCustomerEmployeeId = pkCustomerEmployeeId;
	}
	
	public BigDecimal getEmploymentType() {
		return employmentType;
	}
	public void setEmploymentType(BigDecimal employmentType) {
		this.employmentType = employmentType;
	}

	public String getOccupation() {
		return occupation;
	}
	public void setOccupation(String occupation) {
		this.occupation = occupation;
	}

	public String getEmployer() {
		return employer;
	}
	public void setEmployer(String employer) {
		this.employer = employer;
	}

	public String getBlockNo() {
		return blockNo;
	}
	public void setBlockNo(String blockNo) {
		this.blockNo = blockNo;
	}

	public String getStreetNo() {
		return streetNo;
	}
	public void setStreetNo(String streetNo) {
		this.streetNo = streetNo;
	}

	public String getArea() {
		return area;
	}
	public void setArea(String area) {
		this.area = area;
	}

	public String getOfficeTelNo() {
		return officeTelNo;
	}
	public void setOfficeTelNo(String officeTelNo) {
		this.officeTelNo = officeTelNo;
	}

	public BigDecimal getCountry() {
		return country;
	}
	public void setCountry(BigDecimal country) {
		this.country = country;
	}

	public BigDecimal getState() {
		return state;
	}
	public void setState(BigDecimal state) {
		this.state = state;
	}

	public BigDecimal getDistrict() {
		return district;
	}
	public void setDistrict(BigDecimal district) {
		this.district = district;
	}

	public BigDecimal getCity() {
		return city;
	}
	public void setCity(BigDecimal city) {
		this.city = city;
	}

	public String getPostalCode() {
		return postalCode;
	}
	public void setPostalCode(String postalCode) {
		this.postalCode = postalCode;
	}
	
	public BigDecimal getPkCustomerContactDetails() {
		return pkCustomerContactDetails;
	}
	public void setPkCustomerContactDetails(BigDecimal pkCustomerContactDetails) {
		this.pkCustomerContactDetails = pkCustomerContactDetails;
	}
	
	public BigDecimal getContactType() {
		return contactType;
	}
	public void setContactType(BigDecimal contactType) {
		this.contactType = contactType;
	}

	public String getContactLocalArea() {
		return contactLocalArea;
	}
	public void setContactLocalArea(String contactLocalArea) {
		this.contactLocalArea = contactLocalArea;
	}

	public BigDecimal getContactCountry() {
		return contactCountry;
	}
	public void setContactCountry(BigDecimal contactCountry) {
		this.contactCountry = contactCountry;
	}

	public String getContactStreetNo() {
		return contactStreetNo;
	}
	public void setContactStreetNo(String contactStreetNo) {
		this.contactStreetNo = contactStreetNo;
	}

	public BigDecimal getContactState() {
		return contactState;
	}
	public void setContactState(BigDecimal contactState) {
		this.contactState = contactState;
	}

	public String getContactTelephoneNo() {
		return contactTelephoneNo;
	}
	public void setContactTelephoneNo(String contactTelephoneNo) {
		this.contactTelephoneNo = contactTelephoneNo;
	}

	public BigDecimal getContactDistrict() {
		return contactDistrict;
	}
	public void setContactDistrict(BigDecimal contactDistrict) {
		this.contactDistrict = contactDistrict;
	}

	public String getContactFlat() {
		return contactFlat;
	}
	public void setContactFlat(String contactFlat) {
		this.contactFlat = contactFlat;
	}

	public BigDecimal getContactCity() {
		return contactCity;
	}
	public void setContactCity(BigDecimal contactCity) {
		this.contactCity = contactCity;
	}

	public String getContactBlockNo() {
		return contactBlockNo;
	}
	public void setContactBlockNo(String contactBlockNo) {
		this.contactBlockNo = contactBlockNo;
	}
	
	public String getShowDob() {
		return showDob;
	}
	public void setShowDob(String showDob) {
		this.showDob = showDob;
	}

	public Boolean getBooPersonalInformation() {
		return booPersonalInformation;
	}
	public void setBooPersonalInformation(Boolean booPersonalInformation) {
		this.booPersonalInformation = booPersonalInformation;
	}
	
	public Boolean getBooEmploymentInformation() {
		return booEmploymentInformation;
	}
	public void setBooEmploymentInformation(Boolean booEmploymentInformation) {
		this.booEmploymentInformation = booEmploymentInformation;
	}
	
	public Boolean getBooContactDetails() {
		return booContactDetails;
	}
	public void setBooContactDetails(Boolean booContactDetails) {
		this.booContactDetails = booContactDetails;
	}
	
	public Boolean getBooReadonlyIdNumber() {
		return booReadonlyIdNumber;
	}
	public void setBooReadonlyIdNumber(Boolean booReadonlyIdNumber) {
		this.booReadonlyIdNumber = booReadonlyIdNumber;
	}
	
	public List<Customer> getLstCustomer() {
		return lstCustomer;
	}
	public void setLstCustomer(List<Customer> lstCustomer) {
		this.lstCustomer = lstCustomer;
	}
	
	public List<CustomerEmploymentInfo> getLstCustomerEmployment() {
		return lstCustomerEmployment;
	}
	public void setLstCustomerEmployment(List<CustomerEmploymentInfo> lstCustomerEmployment) {
		this.lstCustomerEmployment = lstCustomerEmployment;
	}
	
	public List<CustomerIdProof> getLstCustomerIdProof() {
		return lstCustomerIdProof;
	}
	public void setLstCustomerIdProof(List<CustomerIdProof> lstCustomerIdProof) {
		this.lstCustomerIdProof = lstCustomerIdProof;
	}
	
	/**
	 * Responsible to populate nationality
	 * @return
	 */
	public List<CountryMasterDesc> getNationalityList() {
		SessionStateManage sessionStateManage = new SessionStateManage();
		List<CountryMasterDesc> lstCountry = getiGeneralService().getNationalityList(new BigDecimal(sessionStateManage.isExists("languageId")?sessionStateManage.getSessionValue("languageId"):""+1));
		return lstCountry;
	}
	
	/**
	 * when Next button will press from Personal Information
	 */
	public void nextFromPersonalInfo() {
		setBooPersonalInformation(false);
		setBooEmploymentInformation(true);
		setBooContactDetails(false);
	}
	
	/**
	 * Back button is pressed from Employee panel, back to Personal Information panel
	 */
	public void backFromEmp() {
		setBooPersonalInformation(true);
		setBooEmploymentInformation(false);
		setBooContactDetails(false);
	}
	
	/**
	 * Responsible to fetch data after login
	 * @param userName
	 * @param customerId
	 * @return
	 */
	public String view(String userName, String customerId) {
		if(!customerId.equalsIgnoreCase("empty")) {
			setPkCustomerId(new BigDecimal(customerId));
			lstCustomer.addAll(getRemOnlineReg().getFsCustomer(getPkCustomerId()));
			setBooReadonlyIdNumber(lstCustomer.size()>0?true:false);
			setShowDob(lstCustomer.get(0).getDateOfBirth()==null?"":formatter.format(lstCustomer.get(0).getDateOfBirth()));
			setTitle(lstCustomer.get(0).getTitle());
			setFirstName(lstCustomer.get(0).getFirstName());
			setMiddleName(lstCustomer.get(0).getMiddleName());
			setLastName(lstCustomer.get(0).getLastName());
			setShortName(lstCustomer.get(0).getShortName());
			setLocalTitle(lstCustomer.get(0).getLastNameLocal());
			setLocalFirstName(lstCustomer.get(0).getFirstNameLocal());
			setLocalMiddleName(lstCustomer.get(0).getMiddleNameLocal());
			setLocalLastName(lstCustomer.get(0).getLastNameLocal());
			setLocalShortName(lstCustomer.get(0).getShortNameLocal());
			setNationality(lstCustomer.get(0).getFsCountryMasterByNationality().getCountryId());
			setGender(lstCustomer.get(0).getGender());
			setMobileNo(lstCustomer.get(0).getMobile());
			setEmail(lstCustomer.get(0).getEmail());
			setAlternateEmail(lstCustomer.get(0).getAlterEmailId());
			
			//setIdNumber(lstCustomer.get(0).getFsCustomerIdProofs().get(0).);
		} 
		return "remmiterInfo";
	}
	
	
	/**
	 * Responsible to populate Date of birth from Civil Id and get the minimum expire date of ID
	 */
	public void popDob() {
		try{
			
			clear();
			/*Date of birth manipulation from CIVIL ID*/
			String id = getIdNumber(); 
			String dob = null;
			if(id.charAt(0)=='2'){
				dob = id.substring(5, 7)+"/"+id.substring(3, 5)+"/19"+id.substring(1, 3);
			} else {
				dob = id.substring(5, 7)+"/"+id.substring(3, 5)+"/20"+id.substring(1, 3);
			}
			
			Date date = formatter.parse(dob);
			setDateOfBirth(date);
			setShowDob(formatter.format(date));
			
			/*ID proof minimum date manipulation*/
			Calendar cal = new GregorianCalendar();
			cal.setTime(new Date());
			cal.add(Calendar.DAY_OF_MONTH,+ 90);
			Date today90 = cal.getTime();
			SimpleDateFormat form = new SimpleDateFormat("dd/MM/yyyy");
			String minExpDate = form.format(today90);
			setExpDateCheck(minExpDate);
		} catch(Exception e) {
			log.info("Problem to manupulate Date of Birth from CIVIL ID");
		}

	}		
	
	/**
	 * Responsible to clear all the fields
	 */
	public void clear(){
		//setIdNumber("");
		setIdExpDate(null);
		setShowDob("");
		//setFileUpload
		setTitle("");
		setFirstName("");
		setMiddleName("");
		setLastName("");
		setShortName("");
		setLocalTitle("");
		setLocalFirstName("");
		setLocalMiddleName("");
		setLocalLastName("");
		setLocalShortName("");
		setNationality(null);
		setGender("");
		setMobileNo("");
		setEmail("");
		setAlternateEmail("");

		setEmploymentType(null);
		setOccupation("");
		setEmployer("");
		setBlockNo("");
		setStreetNo("");
		setArea("");
		setOfficeTelNo("");
		setCountry(null);
		setState(null);
		setDistrict(null);
		setCity(null);
		setPostalCode("");

		setContactType(null);
		setContactLocalArea("");
		setContactCountry(null);
		setContactStreetNo("");
		setContactState(null);
		setContactTelephoneNo("");
		setContactDistrict(null);
		setContactFlat("");
		setContactCity(null);
		setContactBlockNo("");

	}
	
	/**
	 * Responsible to return a blob format of image 
	 * @return
	 * @throws IOException
	 * @throws SerialException
	 * @throws SQLException
	 */
    public Blob storeImage() throws IOException, SerialException, SQLException {
    	InputStream stream = null;
    	try {
    		stream =  file.getInputstream();
         }catch(Exception e){
            e.printStackTrace();
         }
    	return new javax.sql.rowset.serial.SerialBlob(readFully(stream));
    }
    
    /**
     * Responsible to prepare a byte array from InputStream
     * @param input
     * @return
     * @throws IOException
     */
    public  byte[] readFully(InputStream input) throws IOException {
        byte[] buffer = new byte[8192];
        int bytesRead;
        ByteArrayOutputStream output = new ByteArrayOutputStream();
        while ((bytesRead = input.read(buffer)) != -1) {
            output.write(buffer, 0, bytesRead);
        }
        return output.toByteArray();
    }
	
	/**
	 * Responsible to save data
	 * @throws SQLException 
	 * @throws IOException 
	 * @throws SerialException 
	 */
	public void save() throws SerialException, IOException, SQLException {
		/*Country ID save*/
		CountryMaster countryMaster = new CountryMaster();
		countryMaster.setCountryId(sessionStateManage.getCountryId());
		
		/*Nationality Id save*/
		CountryMaster nationality = new CountryMaster();
		nationality.setCountryId(getNationality());
		
		/*save company*/
		CompanyMaster companyMaster = new CompanyMaster();
		companyMaster.setCompanyId(sessionStateManage.getCompanyId());
		
		/*Customer Type*/
		CustomerType customerType = new CustomerType();
		customerType.setCustomerTypeId(new BigDecimal(1));
		
		/*TODO Hard coded Group ID*/
		CompanyGroup companyGroup = new CompanyGroup();
		companyGroup.setGroupId(new BigDecimal(1));
		
		/*Calculating Language ID*/
		int languageID = 1;
		if(FacesContext.getCurrentInstance().getExternalContext().getSessionMap().containsKey("languageCode")) {
			languageID = FacesContext.getCurrentInstance().getExternalContext().getSessionMap().get("languageCode").toString().equalsIgnoreCase("ar")?2:1;
		}
		LanguageType langType = new LanguageType();
		langType.setLanguageId(new BigDecimal(languageID));
		
		/*Customer base table*/
		Customer customer = new Customer();
		customer.setFsCountryMasterByCountryId(countryMaster);
		customer.setFsCompanyMaster(companyMaster);
		customer.setFsCustomerType(customerType);
		customer.setFsLanguageType(langType);
		customer.setFsCompanyGroup(companyGroup);
		customer.setFsCountryMasterByNationality(nationality);
		customer.setTitle(getTitle());
		customer.setFirstName(getFirstName());
		customer.setMiddleName(getMiddleName());
		customer.setLastName(getLastName());
		customer.setShortName(getShortName());
		customer.setTitleLocal(getLocalTitle());
		customer.setFirstNameLocal(getLocalFirstName());
		customer.setMiddleNameLocal(getLocalMiddleName());
		customer.setLastNameLocal(getLocalLastName());
		customer.setShortNameLocal(getLocalShortName());
		customer.setGender(getGender());
		customer.setMobile(getMobileNo());
		customer.setEmail(getEmail());
		customer.setAlterEmailId(getAlternateEmail());
		customer.setDateOfBirth(getDateOfBirth());
		customer.setCreatedBy(sessionStateManage.isExists("userName")?sessionStateManage.getSessionValue("userName"):"root");
		customer.setCreationDate(new Date());
		if(getPkCustomerEmployeeId()!=null) {
			customer.setCustomerId(getPkCustomerId());
		}
		getRemOnlineReg().saveCustomer(customer);
		
		/*Image Saving table*/
		DocumentImg image = new DocumentImg();
		image.setImage(storeImage());
		image.setUploadDate(new Date());
		image.setImageName(getFile().getFileName());
		image.setImgStatus("1");
		image.setUploadDate(new Date());
		getRemOnlineReg().saveImage(image);
		
		IdentityType identityType = new IdentityType();
		//TODO hard coded CIVIL ID identity number, this page is specifically for those having CIVIL ID 
		identityType.setIdentityTypeId(new BigDecimal(1));
		
		CustomerIdProof idProof = new CustomerIdProof(); 
		idProof.setFsCustomer(customer);
		idProof.setFsCustomerType(customerType);
		idProof.setFsLanguageType(langType);
		idProof.setFsIdentityType(identityType);
		idProof.setIdentityInt(getIdNumber());
		idProof.setIdentityExpiryDate(getIdExpDate());
		idProof.setFsDocumentImg(image);
		getRemOnlineReg().saveCustomerEmploymentProofInfo(idProof);
		
		/*It will update Login Table by Customer ID*/ 
		getRemOnlineReg().updateLoginCustomerId(sessionStateManage.getSessionValue("userName"), customer.getCustomerId() );
		
		try {
			ExternalContext context = FacesContext.getCurrentInstance().getExternalContext(); 
			context.redirect("../login/login.xhtml");
		} catch(Exception e) {
			System.out.println("Problem : "+e);
		}
	}
	
}  

